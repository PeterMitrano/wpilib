sourceSets {
    sim
}

dependencies {
    simCompile sourceSets.shared.output
    simCompile project(':simulation:JavaGazebo')
    simCompile "edu.wpi.first.wpilib.networktables.java:NetworkTables:3.0.0-SNAPSHOT:arm${getClassifier()}"
}

task wpilibjSimJar(type: Jar, dependsOn: simClasses) {
    description = 'Creates the WPILibJSimulation Jar'
    group = 'WPILib'
    from sourceSets.sim.output.classesDir
    from sourceSets.shared.output.classesDir
    baseName 'wpilibjSimulation'
}

task wpilibjSimSources(type: Jar, dependsOn: simClasses) {
    description = 'Creates the wpilibjSimulation sources jar for the maven publishing routine'
    group = 'WPILib'
    classifier = 'sources'
    from sourceSets.sim.allJava
    from sourceSets.shared.allJava
}

task wpilibjSimJavadoc(type: Javadoc) {
    description = 'Generates javadoc for the simulation components'
    group = 'WPILib'
    source sourceSets.sim.allJava, sourceSets.shared.allJava
    classpath = files([sourceSets.sim.compileClasspath, sourceSets.shared.compileClasspath])
}

task wpilibjSimJavadocJar(type: Jar, dependsOn: wpilibjSimJavadoc) {
    description = 'Creates the wpilibjSimulation javadoc jar for the maven publishing routine'
    group = 'WPILib'
    classifier = 'javadoc'
    from wpilibjSimJavadoc.destinationDir
}

// Maven publishing configuration
publishing {
    publications {
        wpilibjSim(MavenPublication) {
            artifact wpilibjSimJar {
                if (useExtension) {
                    classifier = project.getClassifier()[1..-1]
                }
            }
            artifact(wpilibjSimSources) {
                classifier = "sources${project.getClassifier()}"
            }
            artifact(wpilibjSimJavadocJar) {
                classifier "javadoc${project.getClassifier()}"
            }

            groupId 'edu.wpi.first.wpilibj'
            artifactId 'wpilibJavaSim'
            version '0.1.0-SNAPSHOT'
        }
    }
}